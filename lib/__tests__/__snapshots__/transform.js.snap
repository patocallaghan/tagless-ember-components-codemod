// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`classic components adds a migration comment if component is using \`jQuery\` 1`] = `
"==========

    import $ from 'jquery';

    export default Component.extend({
      didInsertElement() {
        console.log($('.test'));
      },
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    import $ from 'jquery';

    export default Component.extend({
      tagName: \\"\\",

      didInsertElement() {
        // CODE MIGRATION HINT: \`jQuery\` should not be used in Glimmer components. For more details on how to migrate see https://go.inter.com/component-jquery.
        console.log($('.test'));
      }
    });
  
~~~~~~~~~~
<div ...attributes>
  foo
</div>
=========="
`;

exports[`classic components adds a migration comment if component is using \`this.element\` 1`] = `
"==========

    export default Component.extend({
      didInsertElement() {
        console.log(this.element);
      },
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",

      didInsertElement() {
        // CODE MIGRATION HINT: \`this.element\` is not supported in Glimmer components. For more details on how to migrate see https://go.inter.com/component-element.
        console.log(this.element);
      }
    });
  
~~~~~~~~~~
<div ...attributes>
  foo
</div>
=========="
`;

exports[`classic components adds a migration comment if component is using \`this.elementId\` 1`] = `
"==========

    export default Component.extend({
      didInsertElement() {
        console.log(this.elementId);
      },
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",

      didInsertElement() {
        // CODE MIGRATION HINT: \`this.elementId\` is not supported in Glimmer components. For more details on how to migrate see https://go.inter.com/component-element.
        console.log(this.elementId);
      }
    });
  
~~~~~~~~~~
<div ...attributes>
  foo
</div>
=========="
`;

exports[`classic components basic 1`] = `
"==========

    export default Component.extend({
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
        tagName: \\"\\"
    });
  
~~~~~~~~~~
<div ...attributes>
  foo
</div>
=========="
`;

exports[`classic components empty lines are not intended 1`] = `
"==========
export default Component.extend({});
~~~~~~~~~~
foo

bar
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~
export default Component.extend({
  tagName: \\"\\"
});
~~~~~~~~~~
<div ...attributes>
  foo

  bar
</div>
=========="
`;

exports[`classic components event handlers Adds action to existing @ember/object import 1`] = `
"==========

    import { get } from '@ember/object';

    export default Component.extend({
      click() {
        console.log('Hello World!');
      },
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    import { get, action } from '@ember/object';

    export default Component.extend({
      tagName: \\"\\",

      onClick: action(function() {
        console.log('Hello World!');
      })
    });
  
~~~~~~~~~~
<div ...attributes {{on \\"click\\" this.onClick}}>
  foo
</div>
=========="
`;

exports[`classic components event handlers Migrates event handlers to the template 1`] = `
"==========

    export default Component.extend({
      keyDown(event) {
        console.log(event);
      },
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    import { action } from \\"@ember/object\\";
    export default Component.extend({
      tagName: \\"\\",

      onKeyDown: action(function(event) {
        console.log(event);
      })
    });
  
~~~~~~~~~~
<div ...attributes {{on \\"keydown\\" this.onKeyDown}}>
  foo
</div>
=========="
`;

exports[`classic components event handlers Migrates multiple event handlers to the template 1`] = `
"==========

    import { action } from '@ember/object';

    export default Component.extend({
      async click() {
        console.log('Hello World!');
      },
      keyDown() {
        console.log('Hello World!');
      },
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    import { action } from '@ember/object';

    export default Component.extend({
      tagName: \\"\\",

      onClick: action(async function() {
        console.log('Hello World!');
      }),

      onKeyDown: action(function() {
        console.log('Hello World!');
      })
    });
  
~~~~~~~~~~
<div ...attributes {{on \\"click\\" this.onClick}} {{on \\"keydown\\" this.onKeyDown}}>
  foo
</div>
=========="
`;

exports[`classic components handles \`ariaRole\` correctly 1`] = `
"==========

    export default Component.extend({
      ariaRole: 'button',
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<div role=\\"button\\" ...attributes>
  foo
</div>
=========="
`;

exports[`classic components handles \`attributeBindings\` correctly 1`] = `
"==========

    export default Component.extend({
      attributeBindings: ['foo', 'bar:baz'],
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<div foo={{this.foo}} baz={{this.bar}} ...attributes>
  foo
</div>
=========="
`;

exports[`classic components handles \`classNameBindings\` correctly 1`] = `
"==========

    export default Component.extend({
      classNameBindings: ['a:b', 'x:y:z', 'foo::bar', ':static', 'isDragging'],
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<div class=\\"{{if this.a \\"b\\"}} {{if this.x \\"y\\" \\"z\\"}} {{unless this.foo \\"bar\\"}} static {{this.isDragging}}\\" ...attributes>
  foo
</div>
=========="
`;

exports[`classic components handles \`classNames\` correctly 1`] = `
"==========

    export default Component.extend({
      classNames: ['foo', 'bar:baz'],
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<div class=\\"foo bar:baz\\" ...attributes>
  foo
</div>
=========="
`;

exports[`classic components handles \`elementId\` correctly 1`] = `
"==========

    export default Component.extend({
      elementId: 'qux',
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<div id=\\"qux\\" ...attributes>
  foo
</div>
=========="
`;

exports[`classic components handles \`hasComponentCSS\` option correctly 1`] = `
"==========

    export default Component.extend({
      classNames: ['foo', 'bar:baz'],
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<div class=\\"{{this.styleNamespace}} foo bar:baz\\" ...attributes>
  foo
</div>
=========="
`;

exports[`classic components handles single \`classNames\` item correctly 1`] = `
"==========

    export default Component.extend({
      classNames: ['foo'],
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<div class=\\"foo\\" ...attributes>
  foo
</div>
=========="
`;

exports[`classic components leading and trailing empty lines are stripped 1`] = `
"==========
export default Component.extend({});
~~~~~~~~~~

foo

~~~~~~~~~~
 => tagName: div
~~~~~~~~~~
export default Component.extend({
  tagName: \\"\\"
});
~~~~~~~~~~
<div ...attributes>
  foo
</div>
=========="
`;

exports[`classic components multi-line template 1`] = `
"==========
export default Component.extend({});
~~~~~~~~~~
{{#if this.foo}}
  FOO
{{else}}
  BAR
{{/if}}
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~
export default Component.extend({
  tagName: \\"\\"
});
~~~~~~~~~~
<div ...attributes>
  {{#if this.foo}}
    FOO
  {{else}}
    BAR
  {{/if}}
</div>
=========="
`;

exports[`classic components replaces existing \`tagName\` 1`] = `
"==========

    export default Component.extend({
      tagName: 'span',
    });
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: span
~~~~~~~~~~

    export default Component.extend({
      tagName: \\"\\",
    });
  
~~~~~~~~~~
<span ...attributes>
  foo
</span>
=========="
`;

exports[`native components basic 1`] = `
"==========

      import Component from '@ember/component';

      export default class FooComponent extends Component {
      }
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import { tagName } from \\"@ember-decorators/component\\";
      import Component from '@ember/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
      }
  
~~~~~~~~~~
<div ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`@attribute\` and \`@attributeBindings\` correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { attribute, attributeBindings } from '@ember-decorators/component';

      @attributeBindings('foo')
      export default class FooComponent extends Component {
        @attribute('baz') bar;
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
        bar;
      }
    
~~~~~~~~~~
<div foo={{this.foo}} baz={{this.bar}} ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`@attribute\` correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { attribute } from '@ember-decorators/component';

      export default class FooComponent extends Component {
        @attribute foo;
        @attribute('baz') bar;
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
        foo;
        bar;
      }
    
~~~~~~~~~~
<div foo={{this.foo}} baz={{this.bar}} ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`@attributeBindings\` correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { attributeBindings } from '@ember-decorators/component';

      @attributeBindings('foo', 'bar:baz')
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
<div foo={{this.foo}} baz={{this.bar}} ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`@className\` correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { className } from '@ember-decorators/component';

      export default class FooComponent extends Component {
        @className('b') a;
        @className('y', 'z') x;
        @className(undefined, 'bar') foo;
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
        a;
        x;
        foo;
      }
    
~~~~~~~~~~
<div class=\\"{{if this.a \\"b\\"}} {{if this.x \\"y\\" \\"z\\"}} {{unless this.foo \\"bar\\"}}\\" ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`@classNameBindings\` correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { classNameBindings } from '@ember-decorators/component';

      @classNameBindings('a:b', 'x:y:z', 'foo::bar', ':static')
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
<div class=\\"{{if this.a \\"b\\"}} {{if this.x \\"y\\" \\"z\\"}} {{unless this.foo \\"bar\\"}} static\\" ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`@classNames\` correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { classNames } from '@ember-decorators/component';

      @classNames('foo', 'bar:baz')
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
<div class=\\"foo bar:baz\\" ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`elementId\` correctly 1`] = `
"==========

      import Component from '@ember/component';

      export default class FooComponent extends Component {
        elementId = 'qux';
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import { tagName } from \\"@ember-decorators/component\\";
      import Component from '@ember/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {}
    
~~~~~~~~~~
<div id=\\"qux\\" ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles \`hasComponentCSS\` option correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { classNames } from '@ember-decorators/component';

      @classNames('foo', 'bar:baz')
      export default class extends Component {
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class extends Component {
      }
    
~~~~~~~~~~
<div class=\\"{{this.styleNamespace}} foo bar:baz\\" ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles TypeScript components correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { classNames } from '@ember-decorators/component';

      @classNameBindings('foo:bar')
      export default class extends Component {
        foo: boolean = true;
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { classNames, tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class extends Component {
        foo: boolean = true;
      }
    
~~~~~~~~~~
<div class={{if this.foo \\"bar\\"}} ...attributes>
  foo
</div>
=========="
`;

exports[`native components handles single \`@classNames\` item correctly 1`] = `
"==========

      import Component from '@ember/component';
      import { classNames } from '@ember-decorators/component';

      @classNames('foo')
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
<div class=\\"foo\\" ...attributes>
  foo
</div>
=========="
`;

exports[`native components keeps unrelated decorators in place 1`] = `
"==========

      import Component from '@ember/component';
      import { classNames, layout } from '@ember-decorators/component';

      @layout(template)
      @classNames('foo')
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import Component from '@ember/component';
      import { layout, tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      @layout(template)
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
<div class=\\"foo\\" ...attributes>
  foo
</div>
=========="
`;

exports[`native components multi-line template 1`] = `
"==========

      import Component from '@ember/component';

      export default class extends Component {};
    
~~~~~~~~~~
{{#if this.foo}}
  FOO
{{else}}
  BAR
{{/if}}
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import { tagName } from \\"@ember-decorators/component\\";
      import Component from '@ember/component';

      @tagName(\\"\\")
      export default class extends Component {}
    
~~~~~~~~~~
<div ...attributes>
  {{#if this.foo}}
    FOO
  {{else}}
    BAR
  {{/if}}
</div>
=========="
`;

exports[`native components renamed import 1`] = `
"==========

      import Base from '@ember/component';

      export default class FooComponent extends Base {
      }
  
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: div
~~~~~~~~~~

      import { tagName } from \\"@ember-decorators/component\\";
      import Base from '@ember/component';

      @tagName(\\"\\")
      export default class FooComponent extends Base {
      }
  
~~~~~~~~~~
<div ...attributes>
  foo
</div>
=========="
`;

exports[`native components replaces existing \`tagName\` 1`] = `
"==========

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName('span')
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
foo
~~~~~~~~~~
 => tagName: span
~~~~~~~~~~

      import Component from '@ember/component';
      import { tagName } from '@ember-decorators/component';

      @tagName(\\"\\")
      export default class FooComponent extends Component {
      }
    
~~~~~~~~~~
<span ...attributes>
  foo
</span>
=========="
`;
